---
import Moon from "@/icons/MoonIcon.astro"
import Sun from "@/icons/SunIcon.astro"



const THEMES = ["Light", "Dark"]
---
<div class="relative">
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition hover:text-blue-500"
  >
    <span class="sr-only">Elige el tema</span>
    <Sun id="light" class="theme-toggle-icon size-5 transition-all" />
    <Moon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>
  <div
    id="themes-menu"
    class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
  >
    <ul>
      {
        THEMES.map((theme) => (
          <li class="themes-menu-option px-2 py-1.5 cursor-pointer hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm">
            {theme}
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  .theme-toggle-icon {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.theme-toggle-icon.visible {
  opacity: 1;
}

  #themes-menu {
  transform: scale(0.8);
  opacity: 0;
  transition: transform 0.15s ease, opacity 0.15s ease;
}

#themes-menu.open {
  transform: scale(1);
  opacity: 1;
  display: block;
}


  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
  #theme-toggle-btn {
  z-index: 20; /* Asegura que el botón esté por encima de otros elementos */
  pointer-events: auto; /* Asegura que el botón detecte clics */
}

#themes-menu {
  z-index: 30; /* El menú debe estar encima del botón y otros elementos */
  pointer-events: auto; /* Asegura que el menú detecte clics */
}

</style>

<script is:inline>
  const themesMenu = document.getElementById("themes-menu");
  const toggleButton = document.getElementById("theme-toggle-btn");

  // const getThemePreference = () => {
  //   return localStorage.getItem("theme") ?? "system";
  // }
  const getThemePreference = () => {
  return localStorage.getItem("theme") ?? "dark";
};

  const updateIcon = (themePreference) => {
  document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
    element.classList.toggle("visible", element.id === themePreference);
  });
};

  // const updateIcon = (themePreference) => {
  //   document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
  //     element.style.scale = element.id === themePreference ? "1" : "0";
  //   });
  // };

  const applyTheme = (themePreference) => {
    const isDark = themePreference === "dark" ||
      (themePreference === "system" && window.matchMedia("(prefers-color-scheme: dark)").matches);
    document.documentElement.classList.toggle("dark", isDark);
  }

  const updateTheme = () => {
    const themePreference = getThemePreference();
    updateIcon(themePreference);
    applyTheme(themePreference);
  }

  // Inicializa el tema al cargar la página
  updateTheme();

  // Evento para actualizar el tema cuando el sistema cambia
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  matchMedia.addEventListener("change", updateTheme);

  toggleButton.addEventListener("click", (e) => {
  e.stopPropagation(); // Evita cerrar inmediatamente por el document.click
  const isClosed = !themesMenu.classList.contains("open");
  themesMenu.classList.toggle("open", isClosed);
});


  // Ocultar el menú si se hace clic fuera
  document.addEventListener("click", () => {
    themesMenu.classList.remove("open");
  });

  // Cambiar tema al seleccionar una opción del menú
  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", (e) => {
      const selectedTheme = e.target.innerText.toLowerCase().trim();
      localStorage.setItem("theme", selectedTheme);
      updateTheme();
    });
  });

  // Reaplicar tema después de la navegación de Astro
  document.addEventListener('astro:after-swap', () => {
    updateTheme();
    window.scrollTo({ left: 0, top: 0, behavior: 'instant' });
  });
</script>
